@inherits LayoutComponentBase

@inject ILogger<LoginLayout> _logger

<HeadContent>
    <!-- Bootstrap Css -->
    <link href="assetsLogin/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!-- Icons Css -->
    <link href="assetsLogin/css/icons.min.css" rel="stylesheet" type="text/css" />
    <!-- App Css-->
    <link href="assetsLogin/css/app.min.css" rel="stylesheet" type="text/css" />
    <!-- custom Css-->
    <link href="assetsLogin/css/custom.min.css" rel="stylesheet" type="text/css" />
    <link href="css/login/styles.css" rel="stylesheet" type="text/css" />
</HeadContent>

<_LoadingSpinner></_LoadingSpinner>

@if (_isLoading)
{
    <_Loading></_Loading>
}
else
{
    <div class="auth-page-wrapper auth-bg-cover py-5 d-flex justify-content-center align-items-center min-vh-100"
         style="background: url('https://humanidades.com/wp-content/uploads/2016/04/campo-1-e1558303226877.jpg') no-repeat center center; background-size: cover; position: relative;">

        <div class="bg-overlay" style="background-color: rgba(0, 0, 0, 0.5); position: absolute; top: 0; bottom: 0; left: 0; right: 0;"></div>

        <!-- auth-page content -->
        <div class="auth-page-content overflow-hidden pt-lg-5 position-relative w-100" style="z-index: 1;">
            <div class="container d-flex justify-content-center">
                <div class="card p-4 shadow-lg col-md-6 col-lg-5 bg-white">
                    @Body
                </div>
            </div>
        </div>

        <!-- footer -->
        <footer class="footer position-absolute w-100 text-white" style="bottom: 0; z-index: 2;">
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="text-center">
                            <p class="mb-0">&copy; @DateTime.Now.Year.</p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>

}

@code {
    private bool _isLoading = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            if (firstRender)
            {
                _isLoading = true;
                StateHasChanged();

                _isLoading = false;
                StateHasChanged();

                await _jsRuntime.LoadJSScript("../assetsLogin/js/layout.js");
                await _jsRuntime.LoadJSScript("../assetsLogin/libs/bootstrap/js/bootstrap.bundle.min.js");
                await _jsRuntime.LoadJSScript("../assetsLogin/libs/simplebar/simplebar.min.js");
                await _jsRuntime.LoadJSScript("../assetsLogin/libs/node-waves/waves.min.js");
                await _jsRuntime.LoadJSScript("../assetsLogin/libs/feather-icons/feather.min.js");
                await _jsRuntime.LoadJSScript("../assetsLogin/js/pages/plugins/lord-icon-2.1.0.js");

                await _jsRuntime.LoadJSScript("../assetsLogin/js/pages/password-addon.init.js");

                await _jsRuntime.InvokeVoidAsync("agregarClase", ".loaderOverlay", "inactive");
            }
        }
        catch(Exception exe)
        {
            _logger.LogError(exe, $"Error al renderizar {nameof(LoginLayout)}");
            await _jsRuntime.NotiflixReportAlert("Error", "Ocurrió un error al cargar esta pantalla", NotiflixMessageType.failure);
        }
    }
}
