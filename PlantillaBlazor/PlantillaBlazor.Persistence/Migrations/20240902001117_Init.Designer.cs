// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlantillaBlazor.Persistence.Data;

#nullable disable

namespace PlantillaBlazor.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240902001117_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Auditoria.AuditoriaAdjuntoEmail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdAuditoriaEnvioEmail")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("NombreAdjunto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RutaAbsolutaAdjunto")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IdAuditoriaEnvioEmail");

                    b.HasIndex("RutaAbsolutaAdjunto");

                    b.ToTable("AuditoriaAdjuntoEmail", "Aud");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Auditoria.AuditoriaConsumoRegistraduria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BodyRequest")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CedulaConsultada")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CodigoErrorCedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartamentoExpedicionDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Error")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoCedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("FechaExpedicionDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaFinConsulta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicioConsulta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("IpConsulta")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("JsonResponse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipioExpedicionDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusCodeRespuesta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UrlRequest")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioConsulta")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CedulaConsultada");

                    b.HasIndex("CodigoErrorCedula");

                    b.HasIndex("EstadoCedula");

                    b.HasIndex("StatusCodeRespuesta");

                    b.HasIndex("UsuarioConsulta");

                    b.ToTable("AuditoriaConsumoRegistraduria", "Aud");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Auditoria.AuditoriaDescargaArchivo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ExtensionArchivo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NombreArchivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PesoArchivo")
                        .HasColumnType("bigint");

                    b.Property<string>("RutaDescargada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RutaOriginal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditoriaDescargaArchivos", "Aud");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Auditoria.AuditoriaEnvioEmail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Asunto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DescripcionError")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailBCC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailCC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailDestinatario")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmailEmisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FueEnviado")
                        .HasColumnType("bit");

                    b.Property<string>("Host")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("MensajeHTML")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroIdentificacionProceso")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Pantalla")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Puerto")
                        .HasColumnType("int");

                    b.Property<bool?>("SslEnabled")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Concepto");

                    b.HasIndex("EmailDestinatario");

                    b.HasIndex("FueEnviado");

                    b.HasIndex("NumeroIdentificacionProceso");

                    b.ToTable("AuditoriaEnvioEmail", "Aud");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Auditoria.AuditoriaEnvioSMS", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CelularDestinatario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContenidoBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContenidoRespuesta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FueEnviado")
                        .HasColumnType("bit");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("IdentificacionProceso")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Pantalla")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlRequest")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CelularDestinatario");

                    b.HasIndex("FechaEnvio");

                    b.HasIndex("FueEnviado");

                    b.HasIndex("IdentificacionProceso");

                    b.HasIndex("Pantalla");

                    b.ToTable("AuditoriaEnvioSMS", "Aud");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Auditoria.AuditoriaEnvioWpp", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CelularDestinatario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContenidoBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContenidoRespuesta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FueEnviado")
                        .HasColumnType("bit");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("IdentificacionProceso")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Pantalla")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlRequest")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CelularDestinatario");

                    b.HasIndex("FechaEnvio");

                    b.HasIndex("FueEnviado");

                    b.HasIndex("IdentificacionProceso");

                    b.HasIndex("Pantalla");

                    b.ToTable("AuditoriaEnvioWpp", "Aud");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Auditoria.AuditoriaEvento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdUsuarioAccion")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("IdentificadorProceso")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Accion");

                    b.HasIndex("Concepto");

                    b.HasIndex("IdUsuarioAccion");

                    b.HasIndex("IdentificadorProceso");

                    b.ToTable("AuditoriaEventos", "Aud");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Auditoria.AuditoriaNavegacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AltoPantalla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnchoPantalla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CookiesHabilitadas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUsuarioAccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("Idioma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IsLocationPermitted")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Navegador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreSO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlataformaNavegador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfundidadColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlActual")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VersionNavegador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VersionSO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioAccion");

                    b.HasIndex("IpAddress");

                    b.HasIndex("UrlActual");

                    b.ToTable("AuditoriaNavegacion", "Aud");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Auditoria.AuditoriaOtp", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaValidacion")
                        .HasColumnType("datetime2");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("IdentificacionProceso")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MetodosEnvio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoProceso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo");

                    b.HasIndex("Estado");

                    b.HasIndex("FechaAdicion");

                    b.HasIndex("FechaValidacion");

                    b.HasIndex("IdentificacionProceso");

                    b.HasIndex("TipoProceso");

                    b.ToTable("AuditoriaOtp", "Aud");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Parametrizacion.ParametroDetallado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdParametroGeneral")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("IdParametroGeneral");

                    b.ToTable("ParametroDetallado", "Par");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FechaAdicion = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdParametroGeneral = 1L,
                            IdUsuarioAdiciono = 1L,
                            Nombre = "Si"
                        },
                        new
                        {
                            Id = 2L,
                            FechaAdicion = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdParametroGeneral = 1L,
                            IdUsuarioAdiciono = 1L,
                            Nombre = "No"
                        });
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Parametrizacion.ParametroGeneral", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("ParametroGeneral", "Par");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FechaAdicion = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUsuarioAdiciono = 1L,
                            Nombre = "SiNo"
                        });
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Perfilamiento.AuditoriaLoginUsuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCierreSesion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaLogin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("IpCierreSesion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IpLogin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MotivoCierreSesion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Descripcion");

                    b.HasIndex("FechaAdicion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AuditoriaLoginUsuario", "Seg");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Perfilamiento.Modulo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NombreModulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoModulo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Modulo", "Seg");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FechaAdicion = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUsuarioAdiciono = 1L,
                            Nivel = "1",
                            NombreModulo = "Configuración",
                            TipoModulo = "Módulo"
                        },
                        new
                        {
                            Id = 2L,
                            FechaAdicion = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUsuarioAdiciono = 1L,
                            Nivel = "1.1",
                            NombreModulo = "Perfilamiento",
                            TipoModulo = "Submódulo"
                        },
                        new
                        {
                            Id = 3L,
                            FechaAdicion = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUsuarioAdiciono = 1L,
                            Nivel = "1.1.1",
                            NombreModulo = "Usuarios",
                            TipoModulo = "Submódulo"
                        },
                        new
                        {
                            Id = 4L,
                            FechaAdicion = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUsuarioAdiciono = 1L,
                            Nivel = "1.1.2",
                            NombreModulo = "Roles",
                            TipoModulo = "Submódulo"
                        },
                        new
                        {
                            Id = 5L,
                            FechaAdicion = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUsuarioAdiciono = 1L,
                            Nivel = "1.1.3",
                            NombreModulo = "Módulos",
                            TipoModulo = "Submódulo"
                        },
                        new
                        {
                            Id = 6L,
                            FechaAdicion = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUsuarioAdiciono = 1L,
                            Nivel = "1.2",
                            NombreModulo = "Parametrización",
                            TipoModulo = "Submódulo"
                        });
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Perfilamiento.Rol", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Rol", "Seg");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FechaAdicion = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUsuarioAdiciono = 1L,
                            IsActive = true,
                            Nombre = "Administrador"
                        });
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Perfilamiento.RolModulo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdModulo")
                        .HasColumnType("bigint");

                    b.Property<long>("IdRol")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdModulo");

                    b.HasIndex("IdRol");

                    b.ToTable("RolModulo", "Seg");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FechaAdicion = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdModulo = 1L,
                            IdRol = 1L,
                            IdUsuarioAdiciono = 1L
                        },
                        new
                        {
                            Id = 2L,
                            FechaAdicion = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdModulo = 2L,
                            IdRol = 1L,
                            IdUsuarioAdiciono = 1L
                        },
                        new
                        {
                            Id = 3L,
                            FechaAdicion = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdModulo = 3L,
                            IdRol = 1L,
                            IdUsuarioAdiciono = 1L
                        },
                        new
                        {
                            Id = 4L,
                            FechaAdicion = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdModulo = 4L,
                            IdRol = 1L,
                            IdUsuarioAdiciono = 1L
                        },
                        new
                        {
                            Id = 5L,
                            FechaAdicion = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdModulo = 5L,
                            IdRol = 1L,
                            IdUsuarioAdiciono = 1L
                        },
                        new
                        {
                            Id = 6L,
                            FechaAdicion = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdModulo = 6L,
                            IdRol = 1L,
                            IdUsuarioAdiciono = 1L
                        });
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Perfilamiento.Session", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInactivacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimoIngreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Host")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IdAuditoriaLogin")
                        .HasColumnType("bigint");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RememberMe")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FechaUltimoIngreso");

                    b.HasIndex("IdAuditoriaLogin");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("IsActive");

                    b.ToTable("Session", "Seg");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Perfilamiento.SolicitudRecuperacionClave", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("IpAccionFinal")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IpAccionInicial")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MotivoCambioContraseña")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Estado");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("MotivoCambioContraseña");

                    b.ToTable("SolicitudRecuperacionClave", "Seg");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Perfilamiento.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("FechaAdicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimoCambioContraseña")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimoIngreso")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdRol")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioAdiciono")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdUsuarioUltimaActualizacion")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTwoFAEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("MustChangePassword")
                        .HasColumnType("bit");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("IdRol");

                    b.HasIndex("IsActive");

                    b.HasIndex("NombreUsuario")
                        .IsUnique();

                    b.ToTable("Usuario", "Seg");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Apellidos = "Administrador",
                            Celular = "",
                            Clave = "$2a$10$shiRv6MY8eRdGrMd./ISYOSdhkxcfEEulDJQeVzF8JTGUJi/jK1Pq",
                            Email = "leonardo.arias@excellentiam.co",
                            FechaAdicion = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdRol = 1L,
                            IsActive = true,
                            IsTwoFAEnabled = false,
                            MustChangePassword = true,
                            NombreUsuario = "Administrador",
                            Nombres = "Administrador"
                        });
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Auditoria.AuditoriaAdjuntoEmail", b =>
                {
                    b.HasOne("PlantillaBlazor.Domain.Entities.Auditoria.AuditoriaEnvioEmail", "AuditoriaEnvioEmail")
                        .WithMany("ListaAdjuntosEmail")
                        .HasForeignKey("IdAuditoriaEnvioEmail")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AuditoriaEnvioEmail");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Auditoria.AuditoriaEvento", b =>
                {
                    b.HasOne("PlantillaBlazor.Domain.Entities.Perfilamiento.Usuario", "UsuarioAccion")
                        .WithMany("ListaAuditoriasEventos")
                        .HasForeignKey("IdUsuarioAccion")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("UsuarioAccion");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Parametrizacion.ParametroDetallado", b =>
                {
                    b.HasOne("PlantillaBlazor.Domain.Entities.Parametrizacion.ParametroGeneral", "ParametroGeneral")
                        .WithMany("ListaParametrosDetallados")
                        .HasForeignKey("IdParametroGeneral")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ParametroGeneral");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Perfilamiento.AuditoriaLoginUsuario", b =>
                {
                    b.HasOne("PlantillaBlazor.Domain.Entities.Perfilamiento.Usuario", "Usuario")
                        .WithMany("ListaAuditoriasLoginUsuario")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Perfilamiento.RolModulo", b =>
                {
                    b.HasOne("PlantillaBlazor.Domain.Entities.Perfilamiento.Modulo", "Modulo")
                        .WithMany("ListaRolModulo")
                        .HasForeignKey("IdModulo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PlantillaBlazor.Domain.Entities.Perfilamiento.Rol", "Rol")
                        .WithMany("ListaRolModulo")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Modulo");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Perfilamiento.Session", b =>
                {
                    b.HasOne("PlantillaBlazor.Domain.Entities.Perfilamiento.Usuario", "Usuario")
                        .WithMany("Sessiones")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Perfilamiento.SolicitudRecuperacionClave", b =>
                {
                    b.HasOne("PlantillaBlazor.Domain.Entities.Perfilamiento.Usuario", "Usuario")
                        .WithMany("ListaSolicitudesRecuperacionClaves")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Perfilamiento.Usuario", b =>
                {
                    b.HasOne("PlantillaBlazor.Domain.Entities.Perfilamiento.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Auditoria.AuditoriaEnvioEmail", b =>
                {
                    b.Navigation("ListaAdjuntosEmail");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Parametrizacion.ParametroGeneral", b =>
                {
                    b.Navigation("ListaParametrosDetallados");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Perfilamiento.Modulo", b =>
                {
                    b.Navigation("ListaRolModulo");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Perfilamiento.Rol", b =>
                {
                    b.Navigation("ListaRolModulo");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("PlantillaBlazor.Domain.Entities.Perfilamiento.Usuario", b =>
                {
                    b.Navigation("ListaAuditoriasEventos");

                    b.Navigation("ListaAuditoriasLoginUsuario");

                    b.Navigation("ListaSolicitudesRecuperacionClaves");

                    b.Navigation("Sessiones");
                });
#pragma warning restore 612, 618
        }
    }
}
